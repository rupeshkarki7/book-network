/*
 * OpenApi Specification - XXMORTIS
 * OpenApi documentation for Spring security
 *
 * The version of the OpenAPI document: 1.0
 * Contact: rpshkarki@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import org.openapitools.client.model.BookTransactionHistory;
import org.openapitools.client.model.Feedback;
import org.openapitools.client.model.User;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Book
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-16T06:49:34.154101600+05:45[Asia/Katmandu]")
public class Book {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_CREATED_DATE = "createdDate";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE)
  private LocalDate createdDate;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_DATE = "lastModifiedDate";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_DATE)
  private LocalDate lastModifiedDate;

  public static final String SERIALIZED_NAME_CREATED_BY = "createdBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private Integer createdBy;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_BY = "lastModifiedBy";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_BY)
  private Integer lastModifiedBy;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_AUTHOR_NAME = "authorName";
  @SerializedName(SERIALIZED_NAME_AUTHOR_NAME)
  private String authorName;

  public static final String SERIALIZED_NAME_ISBN = "isbn";
  @SerializedName(SERIALIZED_NAME_ISBN)
  private String isbn;

  public static final String SERIALIZED_NAME_SYNOPSIS = "synopsis";
  @SerializedName(SERIALIZED_NAME_SYNOPSIS)
  private String synopsis;

  public static final String SERIALIZED_NAME_BOOK_COVER = "bookCover";
  @SerializedName(SERIALIZED_NAME_BOOK_COVER)
  private String bookCover;

  public static final String SERIALIZED_NAME_ARCHIVED = "archived";
  @SerializedName(SERIALIZED_NAME_ARCHIVED)
  private Boolean archived;

  public static final String SERIALIZED_NAME_SHAREABLE = "shareable";
  @SerializedName(SERIALIZED_NAME_SHAREABLE)
  private Boolean shareable;

  public static final String SERIALIZED_NAME_OWNER = "owner";
  @SerializedName(SERIALIZED_NAME_OWNER)
  private User owner;

  public static final String SERIALIZED_NAME_FEEDBACKS = "feedbacks";
  @SerializedName(SERIALIZED_NAME_FEEDBACKS)
  private Set<Feedback> feedbacks = null;

  public static final String SERIALIZED_NAME_HISTORIES = "histories";
  @SerializedName(SERIALIZED_NAME_HISTORIES)
  private List<BookTransactionHistory> histories = null;

  public static final String SERIALIZED_NAME_RATE = "rate";
  @SerializedName(SERIALIZED_NAME_RATE)
  private Double rate;

  public Book() {
  }

  public Book id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public Book createdDate(LocalDate createdDate) {
    
    this.createdDate = createdDate;
    return this;
  }

   /**
   * Get createdDate
   * @return createdDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getCreatedDate() {
    return createdDate;
  }


  public void setCreatedDate(LocalDate createdDate) {
    this.createdDate = createdDate;
  }


  public Book lastModifiedDate(LocalDate lastModifiedDate) {
    
    this.lastModifiedDate = lastModifiedDate;
    return this;
  }

   /**
   * Get lastModifiedDate
   * @return lastModifiedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getLastModifiedDate() {
    return lastModifiedDate;
  }


  public void setLastModifiedDate(LocalDate lastModifiedDate) {
    this.lastModifiedDate = lastModifiedDate;
  }


  public Book createdBy(Integer createdBy) {
    
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCreatedBy() {
    return createdBy;
  }


  public void setCreatedBy(Integer createdBy) {
    this.createdBy = createdBy;
  }


  public Book lastModifiedBy(Integer lastModifiedBy) {
    
    this.lastModifiedBy = lastModifiedBy;
    return this;
  }

   /**
   * Get lastModifiedBy
   * @return lastModifiedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getLastModifiedBy() {
    return lastModifiedBy;
  }


  public void setLastModifiedBy(Integer lastModifiedBy) {
    this.lastModifiedBy = lastModifiedBy;
  }


  public Book title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public Book authorName(String authorName) {
    
    this.authorName = authorName;
    return this;
  }

   /**
   * Get authorName
   * @return authorName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAuthorName() {
    return authorName;
  }


  public void setAuthorName(String authorName) {
    this.authorName = authorName;
  }


  public Book isbn(String isbn) {
    
    this.isbn = isbn;
    return this;
  }

   /**
   * Get isbn
   * @return isbn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIsbn() {
    return isbn;
  }


  public void setIsbn(String isbn) {
    this.isbn = isbn;
  }


  public Book synopsis(String synopsis) {
    
    this.synopsis = synopsis;
    return this;
  }

   /**
   * Get synopsis
   * @return synopsis
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSynopsis() {
    return synopsis;
  }


  public void setSynopsis(String synopsis) {
    this.synopsis = synopsis;
  }


  public Book bookCover(String bookCover) {
    
    this.bookCover = bookCover;
    return this;
  }

   /**
   * Get bookCover
   * @return bookCover
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBookCover() {
    return bookCover;
  }


  public void setBookCover(String bookCover) {
    this.bookCover = bookCover;
  }


  public Book archived(Boolean archived) {
    
    this.archived = archived;
    return this;
  }

   /**
   * Get archived
   * @return archived
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getArchived() {
    return archived;
  }


  public void setArchived(Boolean archived) {
    this.archived = archived;
  }


  public Book shareable(Boolean shareable) {
    
    this.shareable = shareable;
    return this;
  }

   /**
   * Get shareable
   * @return shareable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getShareable() {
    return shareable;
  }


  public void setShareable(Boolean shareable) {
    this.shareable = shareable;
  }


  public Book owner(User owner) {
    
    this.owner = owner;
    return this;
  }

   /**
   * Get owner
   * @return owner
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public User getOwner() {
    return owner;
  }


  public void setOwner(User owner) {
    this.owner = owner;
  }


  public Book feedbacks(Set<Feedback> feedbacks) {
    
    this.feedbacks = feedbacks;
    return this;
  }

  public Book addFeedbacksItem(Feedback feedbacksItem) {
    if (this.feedbacks == null) {
      this.feedbacks = new LinkedHashSet<>();
    }
    this.feedbacks.add(feedbacksItem);
    return this;
  }

   /**
   * Get feedbacks
   * @return feedbacks
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Set<Feedback> getFeedbacks() {
    return feedbacks;
  }


  public void setFeedbacks(Set<Feedback> feedbacks) {
    this.feedbacks = feedbacks;
  }


  public Book histories(List<BookTransactionHistory> histories) {
    
    this.histories = histories;
    return this;
  }

  public Book addHistoriesItem(BookTransactionHistory historiesItem) {
    if (this.histories == null) {
      this.histories = new ArrayList<>();
    }
    this.histories.add(historiesItem);
    return this;
  }

   /**
   * Get histories
   * @return histories
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<BookTransactionHistory> getHistories() {
    return histories;
  }


  public void setHistories(List<BookTransactionHistory> histories) {
    this.histories = histories;
  }


  public Book rate(Double rate) {
    
    this.rate = rate;
    return this;
  }

   /**
   * Get rate
   * @return rate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getRate() {
    return rate;
  }


  public void setRate(Double rate) {
    this.rate = rate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Book book = (Book) o;
    return Objects.equals(this.id, book.id) &&
        Objects.equals(this.createdDate, book.createdDate) &&
        Objects.equals(this.lastModifiedDate, book.lastModifiedDate) &&
        Objects.equals(this.createdBy, book.createdBy) &&
        Objects.equals(this.lastModifiedBy, book.lastModifiedBy) &&
        Objects.equals(this.title, book.title) &&
        Objects.equals(this.authorName, book.authorName) &&
        Objects.equals(this.isbn, book.isbn) &&
        Objects.equals(this.synopsis, book.synopsis) &&
        Objects.equals(this.bookCover, book.bookCover) &&
        Objects.equals(this.archived, book.archived) &&
        Objects.equals(this.shareable, book.shareable) &&
        Objects.equals(this.owner, book.owner) &&
        Objects.equals(this.feedbacks, book.feedbacks) &&
        Objects.equals(this.histories, book.histories) &&
        Objects.equals(this.rate, book.rate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, createdDate, lastModifiedDate, createdBy, lastModifiedBy, title, authorName, isbn, synopsis, bookCover, archived, shareable, owner, feedbacks, histories, rate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Book {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    lastModifiedDate: ").append(toIndentedString(lastModifiedDate)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    lastModifiedBy: ").append(toIndentedString(lastModifiedBy)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    authorName: ").append(toIndentedString(authorName)).append("\n");
    sb.append("    isbn: ").append(toIndentedString(isbn)).append("\n");
    sb.append("    synopsis: ").append(toIndentedString(synopsis)).append("\n");
    sb.append("    bookCover: ").append(toIndentedString(bookCover)).append("\n");
    sb.append("    archived: ").append(toIndentedString(archived)).append("\n");
    sb.append("    shareable: ").append(toIndentedString(shareable)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    feedbacks: ").append(toIndentedString(feedbacks)).append("\n");
    sb.append("    histories: ").append(toIndentedString(histories)).append("\n");
    sb.append("    rate: ").append(toIndentedString(rate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("createdDate");
    openapiFields.add("lastModifiedDate");
    openapiFields.add("createdBy");
    openapiFields.add("lastModifiedBy");
    openapiFields.add("title");
    openapiFields.add("authorName");
    openapiFields.add("isbn");
    openapiFields.add("synopsis");
    openapiFields.add("bookCover");
    openapiFields.add("archived");
    openapiFields.add("shareable");
    openapiFields.add("owner");
    openapiFields.add("feedbacks");
    openapiFields.add("histories");
    openapiFields.add("rate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to Book
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (Book.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in Book is not found in the empty JSON string", Book.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!Book.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Book` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if ((jsonObj.get("authorName") != null && !jsonObj.get("authorName").isJsonNull()) && !jsonObj.get("authorName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `authorName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("authorName").toString()));
      }
      if ((jsonObj.get("isbn") != null && !jsonObj.get("isbn").isJsonNull()) && !jsonObj.get("isbn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `isbn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("isbn").toString()));
      }
      if ((jsonObj.get("synopsis") != null && !jsonObj.get("synopsis").isJsonNull()) && !jsonObj.get("synopsis").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `synopsis` to be a primitive type in the JSON string but got `%s`", jsonObj.get("synopsis").toString()));
      }
      if ((jsonObj.get("bookCover") != null && !jsonObj.get("bookCover").isJsonNull()) && !jsonObj.get("bookCover").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bookCover` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bookCover").toString()));
      }
      // validate the optional field `owner`
      if (jsonObj.get("owner") != null && !jsonObj.get("owner").isJsonNull()) {
        User.validateJsonObject(jsonObj.getAsJsonObject("owner"));
      }
      if (jsonObj.get("feedbacks") != null && !jsonObj.get("feedbacks").isJsonNull()) {
        JsonArray jsonArrayfeedbacks = jsonObj.getAsJsonArray("feedbacks");
        if (jsonArrayfeedbacks != null) {
          // ensure the json data is an array
          if (!jsonObj.get("feedbacks").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `feedbacks` to be an array in the JSON string but got `%s`", jsonObj.get("feedbacks").toString()));
          }

          // validate the optional field `feedbacks` (array)
          for (int i = 0; i < jsonArrayfeedbacks.size(); i++) {
            Feedback.validateJsonObject(jsonArrayfeedbacks.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("histories") != null && !jsonObj.get("histories").isJsonNull()) {
        JsonArray jsonArrayhistories = jsonObj.getAsJsonArray("histories");
        if (jsonArrayhistories != null) {
          // ensure the json data is an array
          if (!jsonObj.get("histories").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `histories` to be an array in the JSON string but got `%s`", jsonObj.get("histories").toString()));
          }

          // validate the optional field `histories` (array)
          for (int i = 0; i < jsonArrayhistories.size(); i++) {
            BookTransactionHistory.validateJsonObject(jsonArrayhistories.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Book.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Book' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Book> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Book.class));

       return (TypeAdapter<T>) new TypeAdapter<Book>() {
           @Override
           public void write(JsonWriter out, Book value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Book read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Book given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Book
  * @throws IOException if the JSON string is invalid with respect to Book
  */
  public static Book fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Book.class);
  }

 /**
  * Convert an instance of Book to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

